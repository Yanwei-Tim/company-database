//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码由 wsdl 自动生成, Version=4.0.30319.1。
// 
namespace Hik8600V323ThirdInfoService
{
    using System;
    using System.Diagnostics;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ThirdInfoServiceSoap11Binding", Namespace="http://webservice.cms.hikvision.com")]
    public partial class ThirdInfoService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getCameraInfoByDeviceInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getDeviceStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback userLogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllControlCenterForListOperationCompleted;
        
        private System.Threading.SendOrPostCallback userLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPreviewParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllRegionInfoForListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPlaybackParamOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllCameraOperationCompleted;
        
        private System.Threading.SendOrPostCallback userOnlineHeartbeatOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCameraStatusOperationCompleted;
        
        public ThirdInfoService(string url)
        {
            //http://192.168.10.230:8011/services/ClientService?wsdl
            //Url = "http://192.168.10.230:8011/services/ClientService.ClientServiceHttpSoap11Endpoint/"
            this.Url = url;
        }
        
        /// <remarks/>
        public event getCameraInfoByDeviceInfoCompletedEventHandler getCameraInfoByDeviceInfoCompleted;
        
        /// <remarks/>
        public event getDeviceStatusCompletedEventHandler getDeviceStatusCompleted;
        
        /// <remarks/>
        public event userLogoutCompletedEventHandler userLogoutCompleted;
        
        /// <remarks/>
        public event getAllControlCenterForListCompletedEventHandler getAllControlCenterForListCompleted;
        
        /// <remarks/>
        public event userLoginCompletedEventHandler userLoginCompleted;
        
        /// <remarks/>
        public event getPreviewParamCompletedEventHandler getPreviewParamCompleted;
        
        /// <remarks/>
        public event getAllRegionInfoForListCompletedEventHandler getAllRegionInfoForListCompleted;
        
        /// <remarks/>
        public event getPlaybackParamCompletedEventHandler getPlaybackParamCompleted;
        
        /// <remarks/>
        public event getAllDeviceCompletedEventHandler getAllDeviceCompleted;
        
        /// <remarks/>
        public event getAllCameraCompletedEventHandler getAllCameraCompleted;
        
        /// <remarks/>
        public event userOnlineHeartbeatCompletedEventHandler userOnlineHeartbeatCompleted;
        
        /// <remarks/>
        public event getCameraStatusCompletedEventHandler getCameraStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getCameraInfoByDeviceInfo", RequestNamespace="http://webservice.cms.hikvision.com", ResponseNamespace="http://webservice.cms.hikvision.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getCameraInfoByDeviceInfo([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string request) {
            object[] results = this.Invoke("getCameraInfoByDeviceInfo", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCameraInfoByDeviceInfo(string request, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCameraInfoByDeviceInfo", new object[] {
                        request}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetCameraInfoByDeviceInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCameraInfoByDeviceInfoAsync(string request) {
            this.getCameraInfoByDeviceInfoAsync(request, null);
        }
        
        /// <remarks/>
        public void getCameraInfoByDeviceInfoAsync(string request, object userState) {
            if ((this.getCameraInfoByDeviceInfoOperationCompleted == null)) {
                this.getCameraInfoByDeviceInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCameraInfoByDeviceInfoOperationCompleted);
            }
            this.InvokeAsync("getCameraInfoByDeviceInfo", new object[] {
                        request}, this.getCameraInfoByDeviceInfoOperationCompleted, userState);
        }
        
        private void OngetCameraInfoByDeviceInfoOperationCompleted(object arg) {
            if ((this.getCameraInfoByDeviceInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCameraInfoByDeviceInfoCompleted(this, new getCameraInfoByDeviceInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getDeviceStatus", RequestNamespace="http://webservice.cms.hikvision.com", ResponseNamespace="http://webservice.cms.hikvision.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getDeviceStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string request) {
            object[] results = this.Invoke("getDeviceStatus", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetDeviceStatus(string request, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getDeviceStatus", new object[] {
                        request}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetDeviceStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getDeviceStatusAsync(string request) {
            this.getDeviceStatusAsync(request, null);
        }
        
        /// <remarks/>
        public void getDeviceStatusAsync(string request, object userState) {
            if ((this.getDeviceStatusOperationCompleted == null)) {
                this.getDeviceStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetDeviceStatusOperationCompleted);
            }
            this.InvokeAsync("getDeviceStatus", new object[] {
                        request}, this.getDeviceStatusOperationCompleted, userState);
        }
        
        private void OngetDeviceStatusOperationCompleted(object arg) {
            if ((this.getDeviceStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getDeviceStatusCompleted(this, new getDeviceStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:userLogout", RequestNamespace="http://webservice.cms.hikvision.com", ResponseNamespace="http://webservice.cms.hikvision.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string userLogout([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string request) {
            object[] results = this.Invoke("userLogout", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginuserLogout(string request, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userLogout", new object[] {
                        request}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EnduserLogout(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void userLogoutAsync(string request) {
            this.userLogoutAsync(request, null);
        }
        
        /// <remarks/>
        public void userLogoutAsync(string request, object userState) {
            if ((this.userLogoutOperationCompleted == null)) {
                this.userLogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserLogoutOperationCompleted);
            }
            this.InvokeAsync("userLogout", new object[] {
                        request}, this.userLogoutOperationCompleted, userState);
        }
        
        private void OnuserLogoutOperationCompleted(object arg) {
            if ((this.userLogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userLogoutCompleted(this, new userLogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getAllControlCenterForList", RequestNamespace="http://webservice.cms.hikvision.com", ResponseNamespace="http://webservice.cms.hikvision.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getAllControlCenterForList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string request) {
            object[] results = this.Invoke("getAllControlCenterForList", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAllControlCenterForList(string request, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAllControlCenterForList", new object[] {
                        request}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetAllControlCenterForList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllControlCenterForListAsync(string request) {
            this.getAllControlCenterForListAsync(request, null);
        }
        
        /// <remarks/>
        public void getAllControlCenterForListAsync(string request, object userState) {
            if ((this.getAllControlCenterForListOperationCompleted == null)) {
                this.getAllControlCenterForListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllControlCenterForListOperationCompleted);
            }
            this.InvokeAsync("getAllControlCenterForList", new object[] {
                        request}, this.getAllControlCenterForListOperationCompleted, userState);
        }
        
        private void OngetAllControlCenterForListOperationCompleted(object arg) {
            if ((this.getAllControlCenterForListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllControlCenterForListCompleted(this, new getAllControlCenterForListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:userLogin", RequestNamespace="http://webservice.cms.hikvision.com", ResponseNamespace="http://webservice.cms.hikvision.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string userLogin([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string request) {
            object[] results = this.Invoke("userLogin", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginuserLogin(string request, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userLogin", new object[] {
                        request}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EnduserLogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void userLoginAsync(string request) {
            this.userLoginAsync(request, null);
        }
        
        /// <remarks/>
        public void userLoginAsync(string request, object userState) {
            if ((this.userLoginOperationCompleted == null)) {
                this.userLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserLoginOperationCompleted);
            }
            this.InvokeAsync("userLogin", new object[] {
                        request}, this.userLoginOperationCompleted, userState);
        }
        
        private void OnuserLoginOperationCompleted(object arg) {
            if ((this.userLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userLoginCompleted(this, new userLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPreviewParam", RequestNamespace="http://webservice.cms.hikvision.com", ResponseNamespace="http://webservice.cms.hikvision.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getPreviewParam([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string request) {
            object[] results = this.Invoke("getPreviewParam", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPreviewParam(string request, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPreviewParam", new object[] {
                        request}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetPreviewParam(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPreviewParamAsync(string request) {
            this.getPreviewParamAsync(request, null);
        }
        
        /// <remarks/>
        public void getPreviewParamAsync(string request, object userState) {
            if ((this.getPreviewParamOperationCompleted == null)) {
                this.getPreviewParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPreviewParamOperationCompleted);
            }
            this.InvokeAsync("getPreviewParam", new object[] {
                        request}, this.getPreviewParamOperationCompleted, userState);
        }
        
        private void OngetPreviewParamOperationCompleted(object arg) {
            if ((this.getPreviewParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPreviewParamCompleted(this, new getPreviewParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getAllRegionInfoForList", RequestNamespace="http://webservice.cms.hikvision.com", ResponseNamespace="http://webservice.cms.hikvision.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getAllRegionInfoForList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string request) {
            object[] results = this.Invoke("getAllRegionInfoForList", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAllRegionInfoForList(string request, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAllRegionInfoForList", new object[] {
                        request}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetAllRegionInfoForList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllRegionInfoForListAsync(string request) {
            this.getAllRegionInfoForListAsync(request, null);
        }
        
        /// <remarks/>
        public void getAllRegionInfoForListAsync(string request, object userState) {
            if ((this.getAllRegionInfoForListOperationCompleted == null)) {
                this.getAllRegionInfoForListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllRegionInfoForListOperationCompleted);
            }
            this.InvokeAsync("getAllRegionInfoForList", new object[] {
                        request}, this.getAllRegionInfoForListOperationCompleted, userState);
        }
        
        private void OngetAllRegionInfoForListOperationCompleted(object arg) {
            if ((this.getAllRegionInfoForListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllRegionInfoForListCompleted(this, new getAllRegionInfoForListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getPlaybackParam", RequestNamespace="http://webservice.cms.hikvision.com", ResponseNamespace="http://webservice.cms.hikvision.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getPlaybackParam([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string request) {
            object[] results = this.Invoke("getPlaybackParam", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetPlaybackParam(string request, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getPlaybackParam", new object[] {
                        request}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetPlaybackParam(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getPlaybackParamAsync(string request) {
            this.getPlaybackParamAsync(request, null);
        }
        
        /// <remarks/>
        public void getPlaybackParamAsync(string request, object userState) {
            if ((this.getPlaybackParamOperationCompleted == null)) {
                this.getPlaybackParamOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPlaybackParamOperationCompleted);
            }
            this.InvokeAsync("getPlaybackParam", new object[] {
                        request}, this.getPlaybackParamOperationCompleted, userState);
        }
        
        private void OngetPlaybackParamOperationCompleted(object arg) {
            if ((this.getPlaybackParamCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPlaybackParamCompleted(this, new getPlaybackParamCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getAllDevice", RequestNamespace="http://webservice.cms.hikvision.com", ResponseNamespace="http://webservice.cms.hikvision.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getAllDevice([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string request) {
            object[] results = this.Invoke("getAllDevice", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAllDevice(string request, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAllDevice", new object[] {
                        request}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetAllDevice(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllDeviceAsync(string request) {
            this.getAllDeviceAsync(request, null);
        }
        
        /// <remarks/>
        public void getAllDeviceAsync(string request, object userState) {
            if ((this.getAllDeviceOperationCompleted == null)) {
                this.getAllDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllDeviceOperationCompleted);
            }
            this.InvokeAsync("getAllDevice", new object[] {
                        request}, this.getAllDeviceOperationCompleted, userState);
        }
        
        private void OngetAllDeviceOperationCompleted(object arg) {
            if ((this.getAllDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllDeviceCompleted(this, new getAllDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getAllCamera", RequestNamespace="http://webservice.cms.hikvision.com", ResponseNamespace="http://webservice.cms.hikvision.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getAllCamera([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string request) {
            object[] results = this.Invoke("getAllCamera", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetAllCamera(string request, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getAllCamera", new object[] {
                        request}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetAllCamera(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getAllCameraAsync(string request) {
            this.getAllCameraAsync(request, null);
        }
        
        /// <remarks/>
        public void getAllCameraAsync(string request, object userState) {
            if ((this.getAllCameraOperationCompleted == null)) {
                this.getAllCameraOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllCameraOperationCompleted);
            }
            this.InvokeAsync("getAllCamera", new object[] {
                        request}, this.getAllCameraOperationCompleted, userState);
        }
        
        private void OngetAllCameraOperationCompleted(object arg) {
            if ((this.getAllCameraCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllCameraCompleted(this, new getAllCameraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:userOnlineHeartbeat", RequestNamespace="http://webservice.cms.hikvision.com", ResponseNamespace="http://webservice.cms.hikvision.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string userOnlineHeartbeat([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string request) {
            object[] results = this.Invoke("userOnlineHeartbeat", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginuserOnlineHeartbeat(string request, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("userOnlineHeartbeat", new object[] {
                        request}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EnduserOnlineHeartbeat(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void userOnlineHeartbeatAsync(string request) {
            this.userOnlineHeartbeatAsync(request, null);
        }
        
        /// <remarks/>
        public void userOnlineHeartbeatAsync(string request, object userState) {
            if ((this.userOnlineHeartbeatOperationCompleted == null)) {
                this.userOnlineHeartbeatOperationCompleted = new System.Threading.SendOrPostCallback(this.OnuserOnlineHeartbeatOperationCompleted);
            }
            this.InvokeAsync("userOnlineHeartbeat", new object[] {
                        request}, this.userOnlineHeartbeatOperationCompleted, userState);
        }
        
        private void OnuserOnlineHeartbeatOperationCompleted(object arg) {
            if ((this.userOnlineHeartbeatCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.userOnlineHeartbeatCompleted(this, new userOnlineHeartbeatCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getCameraStatus", RequestNamespace="http://webservice.cms.hikvision.com", ResponseNamespace="http://webservice.cms.hikvision.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getCameraStatus([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string request) {
            object[] results = this.Invoke("getCameraStatus", new object[] {
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetCameraStatus(string request, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getCameraStatus", new object[] {
                        request}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndgetCameraStatus(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getCameraStatusAsync(string request) {
            this.getCameraStatusAsync(request, null);
        }
        
        /// <remarks/>
        public void getCameraStatusAsync(string request, object userState) {
            if ((this.getCameraStatusOperationCompleted == null)) {
                this.getCameraStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCameraStatusOperationCompleted);
            }
            this.InvokeAsync("getCameraStatus", new object[] {
                        request}, this.getCameraStatusOperationCompleted, userState);
        }
        
        private void OngetCameraStatusOperationCompleted(object arg) {
            if ((this.getCameraStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCameraStatusCompleted(this, new getCameraStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCameraInfoByDeviceInfoCompletedEventHandler(object sender, getCameraInfoByDeviceInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCameraInfoByDeviceInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCameraInfoByDeviceInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getDeviceStatusCompletedEventHandler(object sender, getDeviceStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getDeviceStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getDeviceStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userLogoutCompletedEventHandler(object sender, userLogoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userLogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userLogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getAllControlCenterForListCompletedEventHandler(object sender, getAllControlCenterForListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllControlCenterForListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllControlCenterForListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userLoginCompletedEventHandler(object sender, userLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getPreviewParamCompletedEventHandler(object sender, getPreviewParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPreviewParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPreviewParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getAllRegionInfoForListCompletedEventHandler(object sender, getAllRegionInfoForListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllRegionInfoForListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllRegionInfoForListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getPlaybackParamCompletedEventHandler(object sender, getPlaybackParamCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPlaybackParamCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPlaybackParamCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getAllDeviceCompletedEventHandler(object sender, getAllDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getAllCameraCompletedEventHandler(object sender, getAllCameraCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllCameraCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllCameraCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void userOnlineHeartbeatCompletedEventHandler(object sender, userOnlineHeartbeatCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class userOnlineHeartbeatCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal userOnlineHeartbeatCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    public delegate void getCameraStatusCompletedEventHandler(object sender, getCameraStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCameraStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCameraStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}
