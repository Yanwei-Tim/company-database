// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.0

package cy.its.service.imageQuery.ice.generated;

// <auto-generated>
//
// Generated from file `Base.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


public class InspectedVehicle implements java.lang.Cloneable, java.io.Serializable
{
    public String inspectDepartment;

    public String inspectAction;

    public String inspectTime;

    public String ExpireDate;

    public String plateNbr;

    public String plateColor;

    public String plateType;

    public String vehicleType;

    public String description;

    public String updateTime;

    public java.util.Map<java.lang.String, java.lang.String> extendedProperties;

    public InspectedVehicle()
    {
    }

    public InspectedVehicle(String inspectDepartment, String inspectAction, String inspectTime, String ExpireDate, String plateNbr, String plateColor, String plateType, String vehicleType, String description, String updateTime, java.util.Map<java.lang.String, java.lang.String> extendedProperties)
    {
        this.inspectDepartment = inspectDepartment;
        this.inspectAction = inspectAction;
        this.inspectTime = inspectTime;
        this.ExpireDate = ExpireDate;
        this.plateNbr = plateNbr;
        this.plateColor = plateColor;
        this.plateType = plateType;
        this.vehicleType = vehicleType;
        this.description = description;
        this.updateTime = updateTime;
        this.extendedProperties = extendedProperties;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        InspectedVehicle _r = null;
        try
        {
            _r = (InspectedVehicle)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(inspectDepartment != _r.inspectDepartment && inspectDepartment != null && !inspectDepartment.equals(_r.inspectDepartment))
            {
                return false;
            }
            if(inspectAction != _r.inspectAction && inspectAction != null && !inspectAction.equals(_r.inspectAction))
            {
                return false;
            }
            if(inspectTime != _r.inspectTime && inspectTime != null && !inspectTime.equals(_r.inspectTime))
            {
                return false;
            }
            if(ExpireDate != _r.ExpireDate && ExpireDate != null && !ExpireDate.equals(_r.ExpireDate))
            {
                return false;
            }
            if(plateNbr != _r.plateNbr && plateNbr != null && !plateNbr.equals(_r.plateNbr))
            {
                return false;
            }
            if(plateColor != _r.plateColor && plateColor != null && !plateColor.equals(_r.plateColor))
            {
                return false;
            }
            if(plateType != _r.plateType && plateType != null && !plateType.equals(_r.plateType))
            {
                return false;
            }
            if(vehicleType != _r.vehicleType && vehicleType != null && !vehicleType.equals(_r.vehicleType))
            {
                return false;
            }
            if(description != _r.description && description != null && !description.equals(_r.description))
            {
                return false;
            }
            if(updateTime != _r.updateTime && updateTime != null && !updateTime.equals(_r.updateTime))
            {
                return false;
            }
            if(extendedProperties != _r.extendedProperties && extendedProperties != null && !extendedProperties.equals(_r.extendedProperties))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        if(inspectDepartment != null)
        {
            __h = 5 * __h + inspectDepartment.hashCode();
        }
        if(inspectAction != null)
        {
            __h = 5 * __h + inspectAction.hashCode();
        }
        if(inspectTime != null)
        {
            __h = 5 * __h + inspectTime.hashCode();
        }
        if(ExpireDate != null)
        {
            __h = 5 * __h + ExpireDate.hashCode();
        }
        if(plateNbr != null)
        {
            __h = 5 * __h + plateNbr.hashCode();
        }
        if(plateColor != null)
        {
            __h = 5 * __h + plateColor.hashCode();
        }
        if(plateType != null)
        {
            __h = 5 * __h + plateType.hashCode();
        }
        if(vehicleType != null)
        {
            __h = 5 * __h + vehicleType.hashCode();
        }
        if(description != null)
        {
            __h = 5 * __h + description.hashCode();
        }
        if(updateTime != null)
        {
            __h = 5 * __h + updateTime.hashCode();
        }
        if(extendedProperties != null)
        {
            __h = 5 * __h + extendedProperties.hashCode();
        }
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(inspectDepartment);
        __os.writeString(inspectAction);
        __os.writeString(inspectTime);
        __os.writeString(ExpireDate);
        __os.writeString(plateNbr);
        __os.writeString(plateColor);
        __os.writeString(plateType);
        __os.writeString(vehicleType);
        __os.writeString(description);
        __os.writeString(updateTime);
        StringStringDictHelper.write(__os, extendedProperties);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        inspectDepartment = __is.readString();
        inspectAction = __is.readString();
        inspectTime = __is.readString();
        ExpireDate = __is.readString();
        plateNbr = __is.readString();
        plateColor = __is.readString();
        plateType = __is.readString();
        vehicleType = __is.readString();
        description = __is.readString();
        updateTime = __is.readString();
        extendedProperties = StringStringDictHelper.read(__is);
    }
}
