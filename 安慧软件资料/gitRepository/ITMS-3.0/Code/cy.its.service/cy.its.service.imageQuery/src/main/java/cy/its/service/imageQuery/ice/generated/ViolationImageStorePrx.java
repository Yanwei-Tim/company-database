// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.0

package cy.its.service.imageQuery.ice.generated;

// <auto-generated>
//
// Generated from file `ViolationImageStore.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


public interface ViolationImageStorePrx extends Ice.ObjectPrx
{
    public boolean StoreViolation(ViolationVehicle violation, VehicleImage[] vehicleImages, ViolationVehicleHolder savedViolation);

    public boolean StoreViolation(ViolationVehicle violation, VehicleImage[] vehicleImages, ViolationVehicleHolder savedViolation, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_StoreViolation(ViolationVehicle violation, VehicleImage[] vehicleImages);

    public Ice.AsyncResult begin_StoreViolation(ViolationVehicle violation, VehicleImage[] vehicleImages, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_StoreViolation(ViolationVehicle violation, VehicleImage[] vehicleImages, Ice.Callback __cb);

    public Ice.AsyncResult begin_StoreViolation(ViolationVehicle violation, VehicleImage[] vehicleImages, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_StoreViolation(ViolationVehicle violation, VehicleImage[] vehicleImages, Callback_ViolationImageStore_StoreViolation __cb);

    public Ice.AsyncResult begin_StoreViolation(ViolationVehicle violation, VehicleImage[] vehicleImages, java.util.Map<String, String> __ctx, Callback_ViolationImageStore_StoreViolation __cb);

    public boolean end_StoreViolation(ViolationVehicleHolder savedViolation, Ice.AsyncResult __result);

    public boolean StoreViolation_async(AMI_ViolationImageStore_StoreViolation __cb, ViolationVehicle violation, VehicleImage[] vehicleImages);

    public boolean StoreViolation_async(AMI_ViolationImageStore_StoreViolation __cb, ViolationVehicle violation, VehicleImage[] vehicleImages, java.util.Map<String, String> __ctx);

    public boolean StoreViolation2(ViolationVehicle violation, byte[] imageData, ViolationVehicleHolder savedViolation);

    public boolean StoreViolation2(ViolationVehicle violation, byte[] imageData, ViolationVehicleHolder savedViolation, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_StoreViolation2(ViolationVehicle violation, byte[] imageData);

    public Ice.AsyncResult begin_StoreViolation2(ViolationVehicle violation, byte[] imageData, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_StoreViolation2(ViolationVehicle violation, byte[] imageData, Ice.Callback __cb);

    public Ice.AsyncResult begin_StoreViolation2(ViolationVehicle violation, byte[] imageData, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_StoreViolation2(ViolationVehicle violation, byte[] imageData, Callback_ViolationImageStore_StoreViolation2 __cb);

    public Ice.AsyncResult begin_StoreViolation2(ViolationVehicle violation, byte[] imageData, java.util.Map<String, String> __ctx, Callback_ViolationImageStore_StoreViolation2 __cb);

    public boolean end_StoreViolation2(ViolationVehicleHolder savedViolation, Ice.AsyncResult __result);

    public boolean StoreViolation2_async(AMI_ViolationImageStore_StoreViolation2 __cb, ViolationVehicle violation, byte[] imageData);

    public boolean StoreViolation2_async(AMI_ViolationImageStore_StoreViolation2 __cb, ViolationVehicle violation, byte[] imageData, java.util.Map<String, String> __ctx);

    public ViolationVehicle[] RetrieveViolationInfo(String deviceNo, String snapNbr);

    public ViolationVehicle[] RetrieveViolationInfo(String deviceNo, String snapNbr, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_RetrieveViolationInfo(String deviceNo, String snapNbr);

    public Ice.AsyncResult begin_RetrieveViolationInfo(String deviceNo, String snapNbr, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_RetrieveViolationInfo(String deviceNo, String snapNbr, Ice.Callback __cb);

    public Ice.AsyncResult begin_RetrieveViolationInfo(String deviceNo, String snapNbr, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_RetrieveViolationInfo(String deviceNo, String snapNbr, Callback_ViolationImageStore_RetrieveViolationInfo __cb);

    public Ice.AsyncResult begin_RetrieveViolationInfo(String deviceNo, String snapNbr, java.util.Map<String, String> __ctx, Callback_ViolationImageStore_RetrieveViolationInfo __cb);

    public ViolationVehicle[] end_RetrieveViolationInfo(Ice.AsyncResult __result);

    public boolean RetrieveViolationInfo_async(AMI_ViolationImageStore_RetrieveViolationInfo __cb, String deviceNo, String snapNbr);

    public boolean RetrieveViolationInfo_async(AMI_ViolationImageStore_RetrieveViolationInfo __cb, String deviceNo, String snapNbr, java.util.Map<String, String> __ctx);

    public VehicleImage[] RetrieveViolationImages(String deviceNo, String snapNbr);

    public VehicleImage[] RetrieveViolationImages(String deviceNo, String snapNbr, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_RetrieveViolationImages(String deviceNo, String snapNbr);

    public Ice.AsyncResult begin_RetrieveViolationImages(String deviceNo, String snapNbr, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_RetrieveViolationImages(String deviceNo, String snapNbr, Ice.Callback __cb);

    public Ice.AsyncResult begin_RetrieveViolationImages(String deviceNo, String snapNbr, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_RetrieveViolationImages(String deviceNo, String snapNbr, Callback_ViolationImageStore_RetrieveViolationImages __cb);

    public Ice.AsyncResult begin_RetrieveViolationImages(String deviceNo, String snapNbr, java.util.Map<String, String> __ctx, Callback_ViolationImageStore_RetrieveViolationImages __cb);

    public VehicleImage[] end_RetrieveViolationImages(Ice.AsyncResult __result);

    public boolean RetrieveViolationImages_async(AMI_ViolationImageStore_RetrieveViolationImages __cb, String deviceNo, String snapNbr);

    public boolean RetrieveViolationImages_async(AMI_ViolationImageStore_RetrieveViolationImages __cb, String deviceNo, String snapNbr, java.util.Map<String, String> __ctx);

    public VehicleImage[] RetrieveViolationMedia(String deviceNo, String snapNbr);

    public VehicleImage[] RetrieveViolationMedia(String deviceNo, String snapNbr, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_RetrieveViolationMedia(String deviceNo, String snapNbr);

    public Ice.AsyncResult begin_RetrieveViolationMedia(String deviceNo, String snapNbr, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_RetrieveViolationMedia(String deviceNo, String snapNbr, Ice.Callback __cb);

    public Ice.AsyncResult begin_RetrieveViolationMedia(String deviceNo, String snapNbr, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_RetrieveViolationMedia(String deviceNo, String snapNbr, Callback_ViolationImageStore_RetrieveViolationMedia __cb);

    public Ice.AsyncResult begin_RetrieveViolationMedia(String deviceNo, String snapNbr, java.util.Map<String, String> __ctx, Callback_ViolationImageStore_RetrieveViolationMedia __cb);

    public VehicleImage[] end_RetrieveViolationMedia(Ice.AsyncResult __result);

    public boolean RetrieveViolationMedia_async(AMI_ViolationImageStore_RetrieveViolationMedia __cb, String deviceNo, String snapNbr);

    public boolean RetrieveViolationMedia_async(AMI_ViolationImageStore_RetrieveViolationMedia __cb, String deviceNo, String snapNbr, java.util.Map<String, String> __ctx);

    public ViolationVehicle[] QueryViolationByTime(String startTime, String endTime, String deviceNo, int pageSize, int pageIndex);

    public ViolationVehicle[] QueryViolationByTime(String startTime, String endTime, String deviceNo, int pageSize, int pageIndex, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_QueryViolationByTime(String startTime, String endTime, String deviceNo, int pageSize, int pageIndex);

    public Ice.AsyncResult begin_QueryViolationByTime(String startTime, String endTime, String deviceNo, int pageSize, int pageIndex, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_QueryViolationByTime(String startTime, String endTime, String deviceNo, int pageSize, int pageIndex, Ice.Callback __cb);

    public Ice.AsyncResult begin_QueryViolationByTime(String startTime, String endTime, String deviceNo, int pageSize, int pageIndex, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_QueryViolationByTime(String startTime, String endTime, String deviceNo, int pageSize, int pageIndex, Callback_ViolationImageStore_QueryViolationByTime __cb);

    public Ice.AsyncResult begin_QueryViolationByTime(String startTime, String endTime, String deviceNo, int pageSize, int pageIndex, java.util.Map<String, String> __ctx, Callback_ViolationImageStore_QueryViolationByTime __cb);

    public ViolationVehicle[] end_QueryViolationByTime(Ice.AsyncResult __result);

    public boolean QueryViolationByTime_async(AMI_ViolationImageStore_QueryViolationByTime __cb, String startTime, String endTime, String deviceNo, int pageSize, int pageIndex);

    public boolean QueryViolationByTime_async(AMI_ViolationImageStore_QueryViolationByTime __cb, String startTime, String endTime, String deviceNo, int pageSize, int pageIndex, java.util.Map<String, String> __ctx);

    public int CountViolationByTime(String startTime, String endTime, String deviceNo);

    public int CountViolationByTime(String startTime, String endTime, String deviceNo, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_CountViolationByTime(String startTime, String endTime, String deviceNo);

    public Ice.AsyncResult begin_CountViolationByTime(String startTime, String endTime, String deviceNo, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_CountViolationByTime(String startTime, String endTime, String deviceNo, Ice.Callback __cb);

    public Ice.AsyncResult begin_CountViolationByTime(String startTime, String endTime, String deviceNo, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_CountViolationByTime(String startTime, String endTime, String deviceNo, Callback_ViolationImageStore_CountViolationByTime __cb);

    public Ice.AsyncResult begin_CountViolationByTime(String startTime, String endTime, String deviceNo, java.util.Map<String, String> __ctx, Callback_ViolationImageStore_CountViolationByTime __cb);

    public int end_CountViolationByTime(Ice.AsyncResult __result);

    public boolean CountViolationByTime_async(AMI_ViolationImageStore_CountViolationByTime __cb, String startTime, String endTime, String deviceNo);

    public boolean CountViolationByTime_async(AMI_ViolationImageStore_CountViolationByTime __cb, String startTime, String endTime, String deviceNo, java.util.Map<String, String> __ctx);

    public boolean UpdateViolaitonInfo(ViolationVehicle vehicle, ViolationVehicleHolder savedVehicle);

    public boolean UpdateViolaitonInfo(ViolationVehicle vehicle, ViolationVehicleHolder savedVehicle, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_UpdateViolaitonInfo(ViolationVehicle vehicle);

    public Ice.AsyncResult begin_UpdateViolaitonInfo(ViolationVehicle vehicle, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_UpdateViolaitonInfo(ViolationVehicle vehicle, Ice.Callback __cb);

    public Ice.AsyncResult begin_UpdateViolaitonInfo(ViolationVehicle vehicle, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_UpdateViolaitonInfo(ViolationVehicle vehicle, Callback_ViolationImageStore_UpdateViolaitonInfo __cb);

    public Ice.AsyncResult begin_UpdateViolaitonInfo(ViolationVehicle vehicle, java.util.Map<String, String> __ctx, Callback_ViolationImageStore_UpdateViolaitonInfo __cb);

    public boolean end_UpdateViolaitonInfo(ViolationVehicleHolder savedVehicle, Ice.AsyncResult __result);

    public boolean UpdateViolaitonInfo_async(AMI_ViolationImageStore_UpdateViolaitonInfo __cb, ViolationVehicle vehicle);

    public boolean UpdateViolaitonInfo_async(AMI_ViolationImageStore_UpdateViolaitonInfo __cb, ViolationVehicle vehicle, java.util.Map<String, String> __ctx);
}
