// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.0

package cy.its.service.imageQuery.ice.generated;

// <auto-generated>
//
// Generated from file `Base.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


public class VehicleImage implements java.lang.Cloneable, java.io.Serializable
{
    public VehicleImageDescription imageDescription;

    public byte[] imageData;

    public VehicleImage()
    {
    }

    public VehicleImage(VehicleImageDescription imageDescription, byte[] imageData)
    {
        this.imageDescription = imageDescription;
        this.imageData = imageData;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        VehicleImage _r = null;
        try
        {
            _r = (VehicleImage)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(imageDescription != _r.imageDescription && imageDescription != null && !imageDescription.equals(_r.imageDescription))
            {
                return false;
            }
            if(!java.util.Arrays.equals(imageData, _r.imageData))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        if(imageDescription != null)
        {
            __h = 5 * __h + imageDescription.hashCode();
        }
        if(imageData != null)
        {
            for(int __i0 = 0; __i0 < imageData.length; __i0++)
            {
                __h = 5 * __h + (int)imageData[__i0];
            }
        }
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        imageDescription.__write(__os);
        Ice.ByteSeqHelper.write(__os, imageData);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        imageDescription = new VehicleImageDescription();
        imageDescription.__read(__is);
        imageData = Ice.ByteSeqHelper.read(__is);
    }
}
