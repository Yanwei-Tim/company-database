// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.0

package cy.its.service.ledClient.generated;

// <auto-generated>
//
// Generated from file `tgcs_base.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


@SuppressWarnings("serial")
public class Program implements java.lang.Cloneable, java.io.Serializable
{
    public int programNo;

    public EProgramType programType;

    public EProgramShowMode showMode;

    public EProgramPriority priority;

    public int playTime;

    public int playTimes;

    public int timingMode;

    public int beginSecond;

    public int beginMinute;

    public int beginHour;

    public int beginDay;

    public int beginMonth;

    public int beginYear;

    public int beginWeek;

    public int endSecond;

    public int endMinute;

    public int endHour;

    public int endDay;

    public int endMonth;

    public int endYear;

    public int endWeek;

    public int weekSelect;

    public int playDelay;

    public Text[] listText;

    public Media[] listMedia;

    public Program()
    {
    }

    public Program(int programNo, EProgramType programType, EProgramShowMode showMode, EProgramPriority priority, int playTime, int playTimes, int timingMode, int beginSecond, int beginMinute, int beginHour, int beginDay, int beginMonth, int beginYear, int beginWeek, int endSecond, int endMinute, int endHour, int endDay, int endMonth, int endYear, int endWeek, int weekSelect, int playDelay, Text[] listText, Media[] listMedia)
    {
        this.programNo = programNo;
        this.programType = programType;
        this.showMode = showMode;
        this.priority = priority;
        this.playTime = playTime;
        this.playTimes = playTimes;
        this.timingMode = timingMode;
        this.beginSecond = beginSecond;
        this.beginMinute = beginMinute;
        this.beginHour = beginHour;
        this.beginDay = beginDay;
        this.beginMonth = beginMonth;
        this.beginYear = beginYear;
        this.beginWeek = beginWeek;
        this.endSecond = endSecond;
        this.endMinute = endMinute;
        this.endHour = endHour;
        this.endDay = endDay;
        this.endMonth = endMonth;
        this.endYear = endYear;
        this.endWeek = endWeek;
        this.weekSelect = weekSelect;
        this.playDelay = playDelay;
        this.listText = listText;
        this.listMedia = listMedia;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        Program _r = null;
        try
        {
            _r = (Program)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(programNo != _r.programNo)
            {
                return false;
            }
            if(programType != _r.programType && programType != null && !programType.equals(_r.programType))
            {
                return false;
            }
            if(showMode != _r.showMode && showMode != null && !showMode.equals(_r.showMode))
            {
                return false;
            }
            if(priority != _r.priority && priority != null && !priority.equals(_r.priority))
            {
                return false;
            }
            if(playTime != _r.playTime)
            {
                return false;
            }
            if(playTimes != _r.playTimes)
            {
                return false;
            }
            if(timingMode != _r.timingMode)
            {
                return false;
            }
            if(beginSecond != _r.beginSecond)
            {
                return false;
            }
            if(beginMinute != _r.beginMinute)
            {
                return false;
            }
            if(beginHour != _r.beginHour)
            {
                return false;
            }
            if(beginDay != _r.beginDay)
            {
                return false;
            }
            if(beginMonth != _r.beginMonth)
            {
                return false;
            }
            if(beginYear != _r.beginYear)
            {
                return false;
            }
            if(beginWeek != _r.beginWeek)
            {
                return false;
            }
            if(endSecond != _r.endSecond)
            {
                return false;
            }
            if(endMinute != _r.endMinute)
            {
                return false;
            }
            if(endHour != _r.endHour)
            {
                return false;
            }
            if(endDay != _r.endDay)
            {
                return false;
            }
            if(endMonth != _r.endMonth)
            {
                return false;
            }
            if(endYear != _r.endYear)
            {
                return false;
            }
            if(endWeek != _r.endWeek)
            {
                return false;
            }
            if(weekSelect != _r.weekSelect)
            {
                return false;
            }
            if(playDelay != _r.playDelay)
            {
                return false;
            }
            if(!java.util.Arrays.equals(listText, _r.listText))
            {
                return false;
            }
            if(!java.util.Arrays.equals(listMedia, _r.listMedia))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        __h = 5 * __h + programNo;
        if(programType != null)
        {
            __h = 5 * __h + programType.hashCode();
        }
        if(showMode != null)
        {
            __h = 5 * __h + showMode.hashCode();
        }
        if(priority != null)
        {
            __h = 5 * __h + priority.hashCode();
        }
        __h = 5 * __h + playTime;
        __h = 5 * __h + playTimes;
        __h = 5 * __h + timingMode;
        __h = 5 * __h + beginSecond;
        __h = 5 * __h + beginMinute;
        __h = 5 * __h + beginHour;
        __h = 5 * __h + beginDay;
        __h = 5 * __h + beginMonth;
        __h = 5 * __h + beginYear;
        __h = 5 * __h + beginWeek;
        __h = 5 * __h + endSecond;
        __h = 5 * __h + endMinute;
        __h = 5 * __h + endHour;
        __h = 5 * __h + endDay;
        __h = 5 * __h + endMonth;
        __h = 5 * __h + endYear;
        __h = 5 * __h + endWeek;
        __h = 5 * __h + weekSelect;
        __h = 5 * __h + playDelay;
        if(listText != null)
        {
            for(int __i0 = 0; __i0 < listText.length; __i0++)
            {
                if(listText[__i0] != null)
                {
                    __h = 5 * __h + listText[__i0].hashCode();
                }
            }
        }
        if(listMedia != null)
        {
            for(int __i1 = 0; __i1 < listMedia.length; __i1++)
            {
                if(listMedia[__i1] != null)
                {
                    __h = 5 * __h + listMedia[__i1].hashCode();
                }
            }
        }
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(programNo);
        programType.__write(__os);
        showMode.__write(__os);
        priority.__write(__os);
        __os.writeInt(playTime);
        __os.writeInt(playTimes);
        __os.writeInt(timingMode);
        __os.writeInt(beginSecond);
        __os.writeInt(beginMinute);
        __os.writeInt(beginHour);
        __os.writeInt(beginDay);
        __os.writeInt(beginMonth);
        __os.writeInt(beginYear);
        __os.writeInt(beginWeek);
        __os.writeInt(endSecond);
        __os.writeInt(endMinute);
        __os.writeInt(endHour);
        __os.writeInt(endDay);
        __os.writeInt(endMonth);
        __os.writeInt(endYear);
        __os.writeInt(endWeek);
        __os.writeInt(weekSelect);
        __os.writeInt(playDelay);
        TextListHelper.write(__os, listText);
        MediaListHelper.write(__os, listMedia);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        programNo = __is.readInt();
        programType = EProgramType.__read(__is);
        showMode = EProgramShowMode.__read(__is);
        priority = EProgramPriority.__read(__is);
        playTime = __is.readInt();
        playTimes = __is.readInt();
        timingMode = __is.readInt();
        beginSecond = __is.readInt();
        beginMinute = __is.readInt();
        beginHour = __is.readInt();
        beginDay = __is.readInt();
        beginMonth = __is.readInt();
        beginYear = __is.readInt();
        beginWeek = __is.readInt();
        endSecond = __is.readInt();
        endMinute = __is.readInt();
        endHour = __is.readInt();
        endDay = __is.readInt();
        endMonth = __is.readInt();
        endYear = __is.readInt();
        endWeek = __is.readInt();
        weekSelect = __is.readInt();
        playDelay = __is.readInt();
        listText = TextListHelper.read(__is);
        listMedia = MediaListHelper.read(__is);
    }
}
