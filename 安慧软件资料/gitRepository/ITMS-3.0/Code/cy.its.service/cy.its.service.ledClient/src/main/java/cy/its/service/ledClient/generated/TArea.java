// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.0

package cy.its.service.ledClient.generated;

// <auto-generated>
//
// Generated from file `tgcs_base.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


@SuppressWarnings("serial")
public class TArea implements java.lang.Cloneable, java.io.Serializable
{
    public int left;

    public int top;

    public int width;

    public int height;

    public int bgColor;

    public EHorizontalAlign hAlign;

    public EVerticalAlign vAlign;

    public TArea()
    {
    }

    public TArea(int left, int top, int width, int height, int bgColor, EHorizontalAlign hAlign, EVerticalAlign vAlign)
    {
        this.left = left;
        this.top = top;
        this.width = width;
        this.height = height;
        this.bgColor = bgColor;
        this.hAlign = hAlign;
        this.vAlign = vAlign;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        TArea _r = null;
        try
        {
            _r = (TArea)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(left != _r.left)
            {
                return false;
            }
            if(top != _r.top)
            {
                return false;
            }
            if(width != _r.width)
            {
                return false;
            }
            if(height != _r.height)
            {
                return false;
            }
            if(bgColor != _r.bgColor)
            {
                return false;
            }
            if(hAlign != _r.hAlign && hAlign != null && !hAlign.equals(_r.hAlign))
            {
                return false;
            }
            if(vAlign != _r.vAlign && vAlign != null && !vAlign.equals(_r.vAlign))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        __h = 5 * __h + left;
        __h = 5 * __h + top;
        __h = 5 * __h + width;
        __h = 5 * __h + height;
        __h = 5 * __h + bgColor;
        if(hAlign != null)
        {
            __h = 5 * __h + hAlign.hashCode();
        }
        if(vAlign != null)
        {
            __h = 5 * __h + vAlign.hashCode();
        }
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(left);
        __os.writeInt(top);
        __os.writeInt(width);
        __os.writeInt(height);
        __os.writeInt(bgColor);
        hAlign.__write(__os);
        vAlign.__write(__os);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        left = __is.readInt();
        top = __is.readInt();
        width = __is.readInt();
        height = __is.readInt();
        bgColor = __is.readInt();
        hAlign = EHorizontalAlign.__read(__is);
        vAlign = EVerticalAlign.__read(__is);
    }
}
