// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.0

package cy.its.service.ledClient.generated;

// <auto-generated>
//
// Generated from file `tgcs_base.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


@SuppressWarnings("serial")
public class ScreenStatusResponse implements java.lang.Cloneable, java.io.Serializable
{
    public int responseCode;

    public ScreenStatus[] listScreenStatus;

    public ScreenStatusResponse()
    {
    }

    public ScreenStatusResponse(int responseCode, ScreenStatus[] listScreenStatus)
    {
        this.responseCode = responseCode;
        this.listScreenStatus = listScreenStatus;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        ScreenStatusResponse _r = null;
        try
        {
            _r = (ScreenStatusResponse)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(responseCode != _r.responseCode)
            {
                return false;
            }
            if(!java.util.Arrays.equals(listScreenStatus, _r.listScreenStatus))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        __h = 5 * __h + responseCode;
        if(listScreenStatus != null)
        {
            for(int __i0 = 0; __i0 < listScreenStatus.length; __i0++)
            {
                if(listScreenStatus[__i0] != null)
                {
                    __h = 5 * __h + listScreenStatus[__i0].hashCode();
                }
            }
        }
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(responseCode);
        ScreenStatusListHelper.write(__os, listScreenStatus);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        responseCode = __is.readInt();
        listScreenStatus = ScreenStatusListHelper.read(__is);
    }
}
