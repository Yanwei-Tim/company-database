// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.0

package cy.its.service.ledClient.generated;

// <auto-generated>
//
// Generated from file `tgcs_base.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


/**
 * π ’œ–≈œ¢
 **/
@SuppressWarnings("serial")
public class LedError implements java.lang.Cloneable, java.io.Serializable
{
    public String ledId;

    public int screenNo;

    public int errorType;

    public String errorDesc;

    public String errorTime;

    public LedError()
    {
    }

    public LedError(String ledId, int screenNo, int errorType, String errorDesc, String errorTime)
    {
        this.ledId = ledId;
        this.screenNo = screenNo;
        this.errorType = errorType;
        this.errorDesc = errorDesc;
        this.errorTime = errorTime;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        LedError _r = null;
        try
        {
            _r = (LedError)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(ledId != _r.ledId && ledId != null && !ledId.equals(_r.ledId))
            {
                return false;
            }
            if(screenNo != _r.screenNo)
            {
                return false;
            }
            if(errorType != _r.errorType)
            {
                return false;
            }
            if(errorDesc != _r.errorDesc && errorDesc != null && !errorDesc.equals(_r.errorDesc))
            {
                return false;
            }
            if(errorTime != _r.errorTime && errorTime != null && !errorTime.equals(_r.errorTime))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        if(ledId != null)
        {
            __h = 5 * __h + ledId.hashCode();
        }
        __h = 5 * __h + screenNo;
        __h = 5 * __h + errorType;
        if(errorDesc != null)
        {
            __h = 5 * __h + errorDesc.hashCode();
        }
        if(errorTime != null)
        {
            __h = 5 * __h + errorTime.hashCode();
        }
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(ledId);
        __os.writeInt(screenNo);
        __os.writeInt(errorType);
        __os.writeString(errorDesc);
        __os.writeString(errorTime);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        ledId = __is.readString();
        screenNo = __is.readInt();
        errorType = __is.readInt();
        errorDesc = __is.readString();
        errorTime = __is.readString();
    }
}
