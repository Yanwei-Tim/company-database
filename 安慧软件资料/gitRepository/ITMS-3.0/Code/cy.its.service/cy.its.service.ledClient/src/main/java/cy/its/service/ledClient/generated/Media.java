// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.0

package cy.its.service.ledClient.generated;

// <auto-generated>
//
// Generated from file `tgcs_base.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


@SuppressWarnings("serial")
public class Media implements java.lang.Cloneable, java.io.Serializable
{
    public int mediaNo;

    public TArea area;

    public EMediaType mediaType;

    public byte[] mediaRawData;

    public String mediaName;

    public String webUrl;

    public EPlayStyle playStyle;

    public int playSpeed;

    public int playTime;

    public EPlayStyle exitStyle;

    public Media()
    {
    }

    public Media(int mediaNo, TArea area, EMediaType mediaType, byte[] mediaRawData, String mediaName, String webUrl, EPlayStyle playStyle, int playSpeed, int playTime, EPlayStyle exitStyle)
    {
        this.mediaNo = mediaNo;
        this.area = area;
        this.mediaType = mediaType;
        this.mediaRawData = mediaRawData;
        this.mediaName = mediaName;
        this.webUrl = webUrl;
        this.playStyle = playStyle;
        this.playSpeed = playSpeed;
        this.playTime = playTime;
        this.exitStyle = exitStyle;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        Media _r = null;
        try
        {
            _r = (Media)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(mediaNo != _r.mediaNo)
            {
                return false;
            }
            if(area != _r.area && area != null && !area.equals(_r.area))
            {
                return false;
            }
            if(mediaType != _r.mediaType && mediaType != null && !mediaType.equals(_r.mediaType))
            {
                return false;
            }
            if(!java.util.Arrays.equals(mediaRawData, _r.mediaRawData))
            {
                return false;
            }
            if(mediaName != _r.mediaName && mediaName != null && !mediaName.equals(_r.mediaName))
            {
                return false;
            }
            if(webUrl != _r.webUrl && webUrl != null && !webUrl.equals(_r.webUrl))
            {
                return false;
            }
            if(playStyle != _r.playStyle && playStyle != null && !playStyle.equals(_r.playStyle))
            {
                return false;
            }
            if(playSpeed != _r.playSpeed)
            {
                return false;
            }
            if(playTime != _r.playTime)
            {
                return false;
            }
            if(exitStyle != _r.exitStyle && exitStyle != null && !exitStyle.equals(_r.exitStyle))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        __h = 5 * __h + mediaNo;
        if(area != null)
        {
            __h = 5 * __h + area.hashCode();
        }
        if(mediaType != null)
        {
            __h = 5 * __h + mediaType.hashCode();
        }
        if(mediaRawData != null)
        {
            for(int __i0 = 0; __i0 < mediaRawData.length; __i0++)
            {
                __h = 5 * __h + (int)mediaRawData[__i0];
            }
        }
        if(mediaName != null)
        {
            __h = 5 * __h + mediaName.hashCode();
        }
        if(webUrl != null)
        {
            __h = 5 * __h + webUrl.hashCode();
        }
        if(playStyle != null)
        {
            __h = 5 * __h + playStyle.hashCode();
        }
        __h = 5 * __h + playSpeed;
        __h = 5 * __h + playTime;
        if(exitStyle != null)
        {
            __h = 5 * __h + exitStyle.hashCode();
        }
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(mediaNo);
        area.__write(__os);
        mediaType.__write(__os);
        ByteSeqHelper.write(__os, mediaRawData);
        __os.writeString(mediaName);
        __os.writeString(webUrl);
        playStyle.__write(__os);
        __os.writeInt(playSpeed);
        __os.writeInt(playTime);
        exitStyle.__write(__os);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        mediaNo = __is.readInt();
        area = new TArea();
        area.__read(__is);
        mediaType = EMediaType.__read(__is);
        mediaRawData = ByteSeqHelper.read(__is);
        mediaName = __is.readString();
        webUrl = __is.readString();
        playStyle = EPlayStyle.__read(__is);
        playSpeed = __is.readInt();
        playTime = __is.readInt();
        exitStyle = EPlayStyle.__read(__is);
    }
}
