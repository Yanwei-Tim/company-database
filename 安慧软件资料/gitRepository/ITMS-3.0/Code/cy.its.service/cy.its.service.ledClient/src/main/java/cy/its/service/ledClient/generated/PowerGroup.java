// **********************************************************************
//
// Copyright (c) 2003-2010 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************

// Ice version 3.4.0

package cy.its.service.ledClient.generated;

// <auto-generated>
//
// Generated from file `tgcs_base.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>


@SuppressWarnings("serial")
public class PowerGroup implements java.lang.Cloneable, java.io.Serializable
{
    public int startHour;

    public int startMinute;

    public int endHour;

    public int endMinute;

    public PowerGroup()
    {
    }

    public PowerGroup(int startHour, int startMinute, int endHour, int endMinute)
    {
        this.startHour = startHour;
        this.startMinute = startMinute;
        this.endHour = endHour;
        this.endMinute = endMinute;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        PowerGroup _r = null;
        try
        {
            _r = (PowerGroup)rhs;
        }
        catch(ClassCastException ex)
        {
        }

        if(_r != null)
        {
            if(startHour != _r.startHour)
            {
                return false;
            }
            if(startMinute != _r.startMinute)
            {
                return false;
            }
            if(endHour != _r.endHour)
            {
                return false;
            }
            if(endMinute != _r.endMinute)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 0;
        __h = 5 * __h + startHour;
        __h = 5 * __h + startMinute;
        __h = 5 * __h + endHour;
        __h = 5 * __h + endMinute;
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeInt(startHour);
        __os.writeInt(startMinute);
        __os.writeInt(endHour);
        __os.writeInt(endMinute);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        startHour = __is.readInt();
        startMinute = __is.readInt();
        endHour = __is.readInt();
        endMinute = __is.readInt();
    }
}
